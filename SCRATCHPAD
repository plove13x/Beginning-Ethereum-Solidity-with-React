SCRATCHPAD

FROM APP.JS

// import Web3 from 'web3';


// var Accounts = require('web3-eth-accounts');
// var accounts = new Accounts('ws://localhost:3000');
// console.log(accounts);



  // const web3 = new Web3(window.web3.currentProvider);
  
  // const deploy = async () => {
  //   console.log('yo');
  //   const accounts = await web3.eth.getAccounts();
  
  //   console.log('attempting to deploy from account', accounts[0]);
  //     // .deploy({data: '0x' + bytecode, arguments:['Hello World']})
  //   const result = await new web3.eth.Contract(abi)
  //     .deploy({data: bytecode, arguments:['Hello World']})
  //     .send({gas: '1000000', from: accounts[0] });
  
  //   console.log('Contract deployed to', result.options.address);
  // }
  
  // deploy();



  // const getAccount = async () => {
  //   const web3 = new Web3(provider);
  //   // web3.eth.getAccounts(console.log);
  //   web3.eth.getAccounts().then(e => console.log(e));
  //   web3.eth.getAccounts()
  //     .then(console.log);
  //   const accounts = await web3.eth.getAccounts();
  //   // console.log(accounts[0]);
  // 	console.log('attempting to deploy from account', accounts[0]);
  // };


  // getAccount();
  
// const sterlz = web3.eth.accounts.create([entropy]);
// console.log(sterlz);



FROM INDEX.JS


// const HDWalletProvider = require('truffle-hdwallet-provider');
// import HDWalletProvider from 'truffle-hdwallet-provider';

// const provider = new HDWalletProvider(
// 	'squeeze bachelor cruise inform quit fame seven ribbon hospital drum tide stomach', 
// 	'https://rinkeby.infura.io/v3/1c7e1aa58e4740578bf6ed015576d742'
// );
// console.log(provider);


          // async getAccount(){
  // const web3 = new Web3(window.web3.currentProvider);
    // const accounts = await web3.request({ method: 'eth_accounts' });



    // import detectEthereumProvider from '@metamask/detect-provider';
// const doThis = async () => {
//   const provider = await detectEthereumProvider();

//   if (provider) {
//     // From now on, this should always be true:
//     // provider === window.ethereum
//     startApp(provider); // initialize your app
//     console.log('dif');
//   } else {
//     console.log('Please install MetaMask!');
//   }
// }

// doThis();